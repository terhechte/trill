func print(_ value: Any) {
  if value is *Int8 {
    print(value as *Int8)
  } else if value is Int {
    print(value as Int)
  } else if value is Bool {
    print(value as Bool)
  } else if value is *Void {
    printf("%p", value as *Void)
  } else if value is String {
    print(value as String)
  } else {
    Mirror(reflecting: value).print(to: stdout)
  }
}

func println(_ value: Any) {
  print(value)
  putchar(10)
}

func print(_ string: String) {
    print(string.cString())
}

func println(_ string: String) {
    println(string.cString())
}

func print(_ string: *Int8) {
    printf("%s", string)
}

func println(_ string: *Int8) {
    printf("%s\n", string)
}

func print(_ bool: Bool) {
    printf("%s", bool ? "true" : "false")
}

func println(_ bool: Bool) {
    printf("%s\n", bool ? "true" : "false")
}

func print(_ int: Int) {
    printf("%d", int)
}

func println(_ int: Int) {
    printf("%d\n", int)
}

func print(_ int: Int8) {
    printf("%c", int)
}

func println(_ int: Int8) {
    printf("%c\n", int)
}

func print(_ int: Int16) {
    printf("%d", int)
}

func println(_ int: Int16) {
    printf("%d\n", int)
}

func print(_ int: Int32) {
    printf("%d", int)
}

func println(_ int: Int32) {
    printf("%d\n", int)
}

func print(_ float: Float) {
    printf("%f", float)
}

func println(_ float: Float) {
    printf("%f\n", float)
}

func print(_ double: Double) {
    printf("%f", double)
}

func println(_ double: Double) {
    printf("%f\n", double)
}
